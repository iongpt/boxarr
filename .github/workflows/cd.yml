name: CD Pipeline

on:
  push:
    tags:
      - 'v*'
  release:
    types: [published]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    name: Build and Push Docker Images
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
      
    outputs:
      image-digest: ${{ steps.build.outputs.digest }}
      image-tags: ${{ steps.meta.outputs.tags }}
      
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
        
        
    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: |
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=semver,pattern={{major}}
          type=raw,value=latest
        labels: |
          org.opencontainers.image.title=Boxarr
          org.opencontainers.image.description=Box Office Tracking for Radarr
          org.opencontainers.image.vendor=Boxarr Project
          org.opencontainers.image.licenses=GPL-3.0
          
    - name: Build and push Docker images
      id: build
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max



  create-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: build-and-push
    if: startsWith(github.ref, 'refs/tags/v')
    permissions:
      contents: write
      
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Generate changelog
      id: changelog
      run: |
        # Extract version from tag
        VERSION=${GITHUB_REF#refs/tags/v}
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        
        # Generate changelog (basic implementation)
        echo "## What's Changed" > CHANGELOG.tmp
        git log --pretty=format:"* %s (%h)" $(git describe --tags --abbrev=0 HEAD~1)..HEAD >> CHANGELOG.tmp
        
        echo "## Docker Images" >> CHANGELOG.tmp
        echo "- \`ghcr.io/${{ github.repository }}:$VERSION\`" >> CHANGELOG.tmp
        
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.ref_name }}
        name: Release ${{ steps.changelog.outputs.version }}
        body_path: CHANGELOG.tmp
        draft: false
        prerelease: false
        generate_release_notes: true
        
  notification:
    name: Send Notifications
    runs-on: ubuntu-latest
    needs: build-and-push
    if: always()
    
    steps:
    - name: Notify on success
      if: needs.build-and-push.result == 'success'
      run: |
        echo "‚úÖ Docker images built and published successfully!"
        echo "üöÄ Images available at:"
        echo "${{ needs.build-and-push.outputs.image-tags }}"
        
    - name: Notify on failure
      if: needs.build-and-push.result == 'failure'
      run: |
        echo "‚ùå Docker build failed!"
        exit 1